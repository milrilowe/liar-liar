{"version":3,"file":"index.js","sources":["../../src/index.ts"],"sourcesContent":["import { fileURLToPath } from 'node:url'\nimport viteReact from '@vitejs/plugin-react'\nimport { TanStackStartVitePluginCore } from '@tanstack/start-plugin-core'\nimport path from 'pathe'\nimport { getTanStackStartOptions } from './schema'\nimport type { TanStackStartInputConfig, WithReactPlugin } from './schema'\nimport type { PluginOption } from 'vite'\n\nexport type {\n  TanStackStartInputConfig,\n  TanStackStartOutputConfig,\n  WithReactPlugin,\n} from './schema'\n\nfunction hasRootExport(\n  exportsField?: Record<string, unknown> | string,\n): boolean {\n  if (!exportsField) return false\n\n  if (typeof exportsField === 'string') {\n    // shorthand form: \"exports\": \"./index.js\"\n    return true\n  }\n\n  if (typeof exportsField === 'object') {\n    return '.' in exportsField\n  }\n\n  return false\n}\n\nexport function TanStackStartVitePlugin(\n  opts?: TanStackStartInputConfig & WithReactPlugin,\n): Array<PluginOption> {\n  type OptionsWithReact = ReturnType<typeof getTanStackStartOptions> &\n    WithReactPlugin\n  const options: OptionsWithReact = getTanStackStartOptions(opts)\n\n  if (opts?.customViteReactPlugin !== true) {\n    console.warn(\n      `please add the vite-react plugin to your Vite config and set 'customViteReactPlugin: true'`,\n    )\n    console.warn(\n      `TanStack Start will not configure the vite-react plugin in future anymore.`,\n    )\n  }\n\n  const isInsideRouterMonoRepo = (() => {\n    const currentDir = path.dirname(fileURLToPath(import.meta.url))\n    return path.basename(path.resolve(currentDir, '../../../')) === 'packages'\n  })()\n\n  return [\n    {\n      name: 'tanstack-react-start:config',\n      configEnvironment() {\n        return {\n          resolve: {\n            dedupe: ['react', 'react-dom', '@tanstack/react-router'],\n\n            external: isInsideRouterMonoRepo\n              ? ['@tanstack/react-router', '@tanstack/react-router-devtools']\n              : undefined,\n          },\n\n          optimizeDeps: {\n            exclude: ['@tanstack/react-router-devtools'],\n            include: [\n              'react',\n              'react/jsx-runtime',\n              'react/jsx-dev-runtime',\n              'react-dom',\n              'react-dom/client',\n              '@tanstack/react-router',\n            ],\n          },\n        }\n      },\n    },\n    TanStackStartVitePluginCore(\n      {\n        framework: 'react',\n        getVirtualServerRootHandler(ctx) {\n          return `\nimport { toWebRequest, defineEventHandler } from '@tanstack/react-start/server';\nimport serverEntry from '${ctx.serverEntryFilepath}';\n\nexport default defineEventHandler(function(event) {\n  const request = toWebRequest(event);\n  return serverEntry({ request });\n});`\n        },\n        getVirtualClientEntry(ctx) {\n          return `\nimport { StrictMode, startTransition } from 'react';\nimport { hydrateRoot } from 'react-dom/client';\nimport { StartClient } from '@tanstack/react-start';\nimport { createRouter } from '${ctx.routerFilepath}';\n\nconst router = createRouter();\n\nstartTransition(() => {\n  hydrateRoot(\n    document,\n    <StrictMode>\n      <StartClient router={router} />\n    </StrictMode>\n  );\n});`\n        },\n        getVirtualServerEntry(ctx) {\n          return `\nimport { createStartHandler, defaultStreamHandler } from '@tanstack/react-start/server';\nimport { createRouter } from '${ctx.routerFilepath}';\n\nexport default createStartHandler({\n  createRouter,\n})(defaultStreamHandler);`\n        },\n        crawlPackages(opts) {\n          if (opts.name === '@tanstack/react-router-devtools') {\n            return 'exclude'\n          }\n          if (hasRootExport(opts.exports) && 'react' in opts.peerDependencies) {\n            return 'include'\n          }\n          return undefined\n        },\n      },\n      options,\n    ),\n    !opts?.customViteReactPlugin && viteReact(options.react),\n  ]\n}\n\nexport { TanStackStartVitePlugin as tanstackStart }\n"],"names":["opts"],"mappings":";;;;;AAcA,SAAS,cACP,cACS;AACL,MAAA,CAAC,aAAqB,QAAA;AAEtB,MAAA,OAAO,iBAAiB,UAAU;AAE7B,WAAA;AAAA,EAAA;AAGL,MAAA,OAAO,iBAAiB,UAAU;AACpC,WAAO,OAAO;AAAA,EAAA;AAGT,SAAA;AACT;AAEO,SAAS,wBACd,MACqB;AAGf,QAAA,UAA4B,wBAAwB,IAAI;AAE1D,OAAA,6BAAM,2BAA0B,MAAM;AAChC,YAAA;AAAA,MACN;AAAA,IACF;AACQ,YAAA;AAAA,MACN;AAAA,IACF;AAAA,EAAA;AAGF,QAAM,0BAA0B,MAAM;AACpC,UAAM,aAAa,KAAK,QAAQ,cAAc,YAAY,GAAG,CAAC;AAC9D,WAAO,KAAK,SAAS,KAAK,QAAQ,YAAY,WAAW,CAAC,MAAM;AAAA,EAAA,GAC/D;AAEI,SAAA;AAAA,IACL;AAAA,MACE,MAAM;AAAA,MACN,oBAAoB;AACX,eAAA;AAAA,UACL,SAAS;AAAA,YACP,QAAQ,CAAC,SAAS,aAAa,wBAAwB;AAAA,YAEvD,UAAU,yBACN,CAAC,0BAA0B,iCAAiC,IAC5D;AAAA,UACN;AAAA,UAEA,cAAc;AAAA,YACZ,SAAS,CAAC,iCAAiC;AAAA,YAC3C,SAAS;AAAA,cACP;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YAAA;AAAA,UACF;AAAA,QAEJ;AAAA,MAAA;AAAA,IAEJ;AAAA,IACA;AAAA,MACE;AAAA,QACE,WAAW;AAAA,QACX,4BAA4B,KAAK;AACxB,iBAAA;AAAA;AAAA,2BAEU,IAAI,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAM1C;AAAA,QACA,sBAAsB,KAAK;AAClB,iBAAA;AAAA;AAAA;AAAA;AAAA,gCAIe,IAAI,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAY1C;AAAA,QACA,sBAAsB,KAAK;AAClB,iBAAA;AAAA;AAAA,gCAEe,IAAI,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,QAK1C;AAAA,QACA,cAAcA,OAAM;AACdA,cAAAA,MAAK,SAAS,mCAAmC;AAC5C,mBAAA;AAAA,UAAA;AAET,cAAI,cAAcA,MAAK,OAAO,KAAK,WAAWA,MAAK,kBAAkB;AAC5D,mBAAA;AAAA,UAAA;AAEF,iBAAA;AAAA,QAAA;AAAA,MAEX;AAAA,MACA;AAAA,IACF;AAAA,IACA,EAAC,6BAAM,0BAAyB,UAAU,QAAQ,KAAK;AAAA,EACzD;AACF;"}