{"version":3,"file":"async-local-storage.cjs","sources":["../../src/async-local-storage.ts"],"sourcesContent":["import { AsyncLocalStorage } from 'node:async_hooks'\nimport type { AnyRouter } from '@tanstack/router-core'\n\nexport interface StartStorageContext {\n  router: AnyRouter\n}\n\nconst startStorage = new AsyncLocalStorage<StartStorageContext>()\n\nexport async function runWithStartContext<T>(\n  context: StartStorageContext,\n  fn: () => T | Promise<T>,\n): Promise<T> {\n  return startStorage.run(context, fn)\n}\n\nexport function getStartContext<TThrow extends boolean = true>(opts?: {\n  throwIfNotFound?: TThrow\n}): TThrow extends false\n  ? StartStorageContext | undefined\n  : StartStorageContext {\n  const context = startStorage.getStore()\n  if (!context && opts?.throwIfNotFound !== false) {\n    throw new Error(\n      `No Start context found in AsyncLocalStorage. Make sure you are using the function within the server runtime.`,\n    )\n  }\n  return context as any\n}\n"],"names":["AsyncLocalStorage"],"mappings":";;;AAOA,MAAM,eAAe,IAAIA,iBAAAA,kBAAuC;AAE1C,eAAA,oBACpB,SACA,IACY;AACL,SAAA,aAAa,IAAI,SAAS,EAAE;AACrC;AAEO,SAAS,gBAA+C,MAIvC;AAChB,QAAA,UAAU,aAAa,SAAS;AACtC,MAAI,CAAC,YAAW,6BAAM,qBAAoB,OAAO;AAC/C,UAAM,IAAI;AAAA,MACR;AAAA,IACF;AAAA,EAAA;AAEK,SAAA;AACT;;;"}